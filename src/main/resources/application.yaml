# ===================================================================================================
# SPRING BOOT PROPERTIES
#
# Documnetation
# - https://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
#
# This file contains all the necessary settings for the application to work. This allows you to 
# externalize these settings, leaving it portable to other environments (dev, test, staging, qa, 
# production).
#
# Below is what you could configure in this file:
#
# - Connect to a different database or queues
# - Connect with different services
# - Configure less logging in production
# - Have different custom configuration
#
# ===================================================================================================

# ---------------------------------------------------------------------------------------------------
# SERVER
#
# > server.port
# Server HTTP port.
# ---------------------------------------------------------------------------------------------------
server:
  port: ${PORT:8080}

# ---------------------------------------------------------------------------------------------------
# CORE
#
# > spring.data.elasticsearch.cluster-nodes
# Comma-separated list of cluster node addresses.
# 
# > spring.datasource.name
# Name of the datasource. Default to "testdb" when using an embedded database.
#
# > spring.datasource.url
# JDBC URL of the database.
#
# > spring.datasource.username
# Login username of the database.
#
# > spring.datasource.password
# Login password of the database.
#
# > spring.datasource.driver-class-name
# Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
#
# > spring.jpa.database-platform
# Name of the target database to operate on, auto-detected by default. Can be alternatively set using 
# the "Database" enum.
#
# > spring.jpa.hibernate.ddl-auto
# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Defaults to 
# "create-drop" when using an embedded database and no schema manager was detected. Otherwise, 
# defaults to "none".
# ---------------------------------------------------------------------------------------------------
spring:
  application:
    name: todo-spring-boot
  data:
    mongodb:
      uri: mongodb+srv://itau:itau123@cluster0-jgkh4.mongodb.net/test?retryWrites=true&w=majority
      database: test
  jpa:
    show-sql: true
    generate-ddl: true
    hibernate:
      ddl-auto: create-drop
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: false
        generate_statistics: true
        jdbc.lob.non_contextual_creation: true
  main:
    allow-bean-definition-overriding: true

# ---------------------------------------------------------------------------------------------------
# LOGGING
#
# > logging.pattern.console
# Appender pattern for output to the console. Supported only with the default Logback setup.
#
# > logging.level.*
# Log levels severity mapping. For instance, `logging.level.org.springframework=DEBUG`.
# ---------------------------------------------------------------------------------------------------
logging:
  level:
    root: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# ---------------------------------------------------------------------------------------------------
# ENDPOINTS
#
# > management.endpoints.web.exposure.include
# Endpoint IDs that should be included or '*' for all.
#
# > management.endpoint.beans.enabled
# Whether to enable the beans endpoint.
# ---------------------------------------------------------------------------------------------------
management:
  endpoints:
    beans:
      enabled: false
    web:
      exposure:
        include: health,info

# ---------------------------------------------------------------------------------------------------
# CUSTOM
#
# > app.document.contact.*
# Contact person responsible for the API and made available in the documentation generated by Swagger.
#
# > app.document.description
# Description of the documentation generated by swagger.
#
# > app.document.title
# Title of the documentation generated by swagger.
#
# > app.document.version
# Version of the documentation generated by swagger.
# ---------------------------------------------------------------------------------------------------
app:
  document:
    contact:
      email: danilo.manoel_oliveira@hotmail.com
      name: Todo
      url: https://todo-itau-spring-boot.herokuapp.com/
    description: Todo com Spring Boot e MongoDB
    title: TodoService Spring Boot - API
    version: 1.0.0

# ---------------------------------------------------------------------------------------------------
# PROFILES
# ---------------------------------------------------------------------------------------------------
---
spring:
  profiles: docker
  data:
    mongodb:
      host: ${MONGODB_HOST}
      port: ${MONGODB_PORT}
      database: ${MONGODB_DATABASE}
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: none

logging:
  level:
    root: ERROR
    org.hibernate.SQL: ERROR
    org.hibernate.type.descriptor.sql.BasicBinder: ERROR
  file: /opt/log/${spring.application.name}_${HOSTNAME}.log
    
